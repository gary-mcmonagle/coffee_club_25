@page "/coffees"
@inject CoffeeApiClient CoffeeApiClient

<h3>Coffee List</h3>

@if (coffees == null)
@using Microsoft.AspNetCore.Components.Forms
{
    <p>Loading...</p>
}
else if (coffees.Count == 0)
{
    <p>No coffees found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Origin</th>
                <th>Roast</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var coffee in coffees)
            {
                <tr>
                    <td>@coffee.Name</td>
                    <td>@coffee.Origin</td>
                    <td>@coffee.Roast</td>
                    <td>@coffee.CreatedAt.ToString("u")</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteCoffee(coffee.Id)">Delete</button>
                        <button class="btn btn-secondary" @onclick="() => EditCoffee(coffee)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h4>Add New Coffee</h4>
<EditForm Model="newCoffee" OnValidSubmit="AddCoffee">
    <InputText @bind-Value="newCoffee.Name" placeholder="Name" />
    <InputText @bind-Value="newCoffee.Origin" placeholder="Origin" />
    <InputText @bind-Value="newCoffee.Roast" placeholder="Roast" />
    <button type="submit" class="btn btn-primary">Add</button>
</EditForm>

@code {
    private List<Coffee> coffees = new List<Coffee>();
    private Coffee newCoffee = new Coffee();
    private Coffee editingCoffee;

    protected override async Task OnInitializedAsync()
    {
        await LoadCoffees();
    }

    private async Task LoadCoffees()
    {
        coffees = await CoffeeApiClient.GetCoffeesAsync();
    }

    private async Task AddCoffee()
    {
        await CoffeeApiClient.AddCoffeeAsync(newCoffee);
        newCoffee = new Coffee();
        await LoadCoffees();
    }

    private async Task DeleteCoffee(string id)
    {
        await CoffeeApiClient.DeleteCoffeeAsync(id);
        await LoadCoffees();
    }

    private void EditCoffee(Coffee coffee)
    {
        editingCoffee = new Coffee
        {
            Id = coffee.Id,
            Name = coffee.Name,
            Origin = coffee.Origin,
            Roast = coffee.Roast,
            CreatedAt = coffee.CreatedAt
        };
    }

    // Add edit functionality as needed
}
