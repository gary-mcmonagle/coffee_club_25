@page "/weather"
@using CoffeeClub.Domain
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject WeatherApiClient WeatherApi
@inject CoffeeApiClient CoffeeApi

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
            <br />
        </tbody>
    </table>

    <h2>Coffees</h2>
    @if (coffees == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Origin</th>
                    <th>Roast</th>
                    <th>Created At</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var coffee in coffees)
                {
                    <tr>
                        <td>@coffee.Name</td>
                        <td>@coffee.Origin</td>
                        <td>@coffee.Roast</td>
                        <td>@coffee.CreatedAt.ToLocalTime().ToString("g")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private WeatherForecast[]? forecasts;

    private CoffeeClubCoffeeModel[]? coffees;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await WeatherApi.GetWeatherAsync();
        coffees = (await CoffeeApi.GetCoffeesAsync()).ToArray();
    }
}
